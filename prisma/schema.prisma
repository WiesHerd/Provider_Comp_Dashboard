generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Provider {
  id                  String               @id @default(cuid())
  employeeId          String               @unique
  firstName           String
  lastName            String
  email               String
  specialty           String
  department          String
  status              String               @default("Active")
  terminationDate     DateTime?
  hireDate            DateTime
  yearsOfExperience   Float                @default(0)
  fte                 Float
  baseSalary          Float
  compensationModel   String
  clinicalFte         Float                @default(0)
  nonClinicalFte      Float                @default(0)
  clinicalSalary      Float                @default(0)
  nonClinicalSalary   Float                @default(0)
  targetWRVUs         Float                @default(0)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  additionalPayments  AdditionalPayment[]
  compensationChanges CompensationChange[]
  analytics           ProviderAnalytics[]
  metrics             ProviderMetrics[]
  targetAdjustments   TargetAdjustment[]
  wrvuAdjustments     WRVUAdjustment[]
  wrvuData            WRVUData[]

  @@map("providers")
}

model CompensationChange {
  id                       String   @id @default(cuid())
  effectiveDate            DateTime
  previousSalary           Float
  newSalary                Float
  previousFTE              Float
  newFTE                   Float
  previousConversionFactor Float
  newConversionFactor      Float
  reason                   String?
  providerId               String
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
  provider                 Provider @relation(fields: [providerId], references: [id])

  @@index([providerId, effectiveDate])
}

model WRVUAdjustment {
  id          String   @id @default(cuid())
  name        String
  description String?
  year        Int
  month       Int
  value       Float
  providerId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  provider    Provider @relation(fields: [providerId], references: [id])

  @@index([providerId, year, month])
}

model TargetAdjustment {
  id          String   @id @default(cuid())
  name        String
  description String?
  year        Int
  month       Int
  value       Float
  providerId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  provider    Provider @relation(fields: [providerId], references: [id])

  @@index([providerId, year, month])
}

model AdditionalPayment {
  id         String   @id @default(cuid())
  name       String
  amount     Float
  month      Int
  year       Int
  providerId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  provider   Provider @relation(fields: [providerId], references: [id])

  @@index([providerId, year, month])
}

model MarketDataHistory {
  id            String   @id @default(cuid())
  marketDataId  String
  marketData    MarketData @relation(fields: [marketDataId], references: [id], onDelete: Cascade)
  changeType    String   // "CREATE", "UPDATE", "DELETE"
  fieldName     String   // Name of the field that changed
  oldValue      String?  // Previous value (JSON stringified if needed)
  newValue      String?  // New value (JSON stringified if needed)
  changedAt     DateTime @default(now())
  changedBy     String?  // Optional: track who made the change

  @@index([marketDataId])
  @@index([changedAt])
}

model MarketData {
  id        String   @id @default(cuid())
  specialty String   @unique
  p25_total Float
  p50_total Float
  p75_total Float
  p90_total Float
  p25_wrvu  Float
  p50_wrvu  Float
  p75_wrvu  Float
  p90_wrvu  Float
  p25_cf    Float
  p50_cf    Float
  p75_cf    Float
  p90_cf    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  history   MarketDataHistory[]

  @@map("market_data")
}

model WRVUData {
  id         String   @id @default(cuid())
  year       Int
  month      Int
  value      Float
  hours      Float    @default(0)
  providerId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  provider   Provider @relation(fields: [providerId], references: [id])
  history    WRVUHistory[]

  @@unique([providerId, year, month])
  @@index([providerId, year])
}

model WRVUHistory {
  id         String    @id @default(cuid())
  wrvuDataId String
  wrvuData   WRVUData  @relation(fields: [wrvuDataId], references: [id], onDelete: Cascade)
  changeType String    // "CREATE", "UPDATE", "DELETE"
  fieldName  String    // Name of the field that changed
  oldValue   String?   // Previous value
  newValue   String?   // New value
  changedAt  DateTime  @default(now())
  changedBy  String?   // Who made the change
}

model ProviderMetrics {
  id                String   @id @default(cuid())
  providerId        String
  year              Int
  month             Int
  actualWRVUs       Float
  rawMonthlyWRVUs   Float
  ytdWRVUs          Float
  targetWRVUs       Float
  baseSalary        Float
  totalCompensation Float
  incentivesEarned  Float
  holdbackAmount    Float
  wrvuPercentile    Float
  compPercentile    Float
  planProgress      Float
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  provider          Provider @relation(fields: [providerId], references: [id])

  @@unique([providerId, year, month])
  @@index([providerId, year])
}

model ProviderAnalytics {
  id                  String   @id @default(cuid())
  providerId          String
  year                Int
  month               Int
  ytdProgress         Float
  ytdTargetProgress   Float
  incentivePercentage Float
  clinicalUtilization Float
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  provider            Provider @relation(fields: [providerId], references: [id])

  @@unique([providerId, year, month])
  @@index([providerId, year])
}
